monitor_raw$NA <- NA
time_diff <- diff(monitor_raw$time, lag=1)
time_diff_check <- which(time_diff > 0.00021)
print("check the time stamp gaps larger than 2e-04:")
print(time_diff_check)
print(time_diff[time_diff_check])
# add the missing power record by interpolation
# suppose only some irregualr gap of 0.4ms
power_mw <- monitor_raw$avg_power_mw[1: time_diff_check[1]]
power_mw_patch <- apply(array(1:length(time_diff_check)), 1,
function(x)
if(x < length(time_diff_check)) {
c((monitor_raw$avg_power_mw[time_diff_check[x]]+
monitor_raw$avg_power_mw[time_diff_check[x]+1])/2,
monitor_raw$avg_power_mw[(time_diff_check[x]+1):time_diff_check[x+1]])
}
else {
c((monitor_raw$avg_power_mw[time_diff_check[x]]+
monitor_raw$avg_power_mw[time_diff_check[x]+1])/2,
monitor_raw$avg_power_mw[(time_diff_check[x]+1):length(monitor_raw$avg_power_mw)])
})
log_time <- monitor_raw$time[1: time_diff_check[1]]
log_time_patch <- apply(array(1:length(time_diff_check)), 1,
function(x)
if(x < length(time_diff_check)) {
c((monitor_raw$time[time_diff_check[x]]+
monitor_raw$time[time_diff_check[x]+1])/2,
monitor_raw$time[(time_diff_check[x]+1):time_diff_check[x+1]])
}
else {
c((monitor_raw$time[time_diff_check[x]]+
monitor_raw$time[time_diff_check[x]+1])/2,
monitor_raw$time[(time_diff_check[x]+1):length(monitor_raw$time)])
})
for(x in 1:length(power_mw_patch)) {
power_mw <- c(power_mw, power_mw_patch[[x]])
log_time <- c(log_time, log_time_patch[[x]])
}
monitor_patch <- data.frame(time=log_time, power_mw=power_mw)
# unit of energy: mW*ms
# length of per aggregrate record: according to up_time_diff per entry (~500ms) in phone activity log
len <- sum(est_matrix_raw$up_time_diff)*5
num_entry <- length(est_matrix_raw$up_time_diff)
len
length(log_time)
for(x in 1:(length(est_matrix_raw$up_time_diff)-1)) {
if(len <= length(log_time)) {
print("TEST: phone activity log is FINE")
break
}
else {
print("Warning: phone activity log is larger than power monitor log")
len <- sum(est_matrix_raw$up_time_diff[1:(length(est_matrix_raw$up_time_diff)-(x+1))])*5
num_entry <- length(est_matrix_raw$up_time_diff) - x
}
}
# BAB: Add each adjacent element in monitor_patch$power_mw, and multiply by .1
energy <- apply(array(1:len), 1,
function(x) (monitor_patch$power_mw[x]+monitor_patch$power_mw[x+1])*0.1)
# unit of energy: mW*s
#energy_measured <- data.frame(time=monitor_patch$time[seq(2501, len+1, by=2500)])
#energy_measured$energy <- colSums(matrix(unlist(energy)[1:len], nrow=2500))/1000
# unit of energy: mW*s per phone acitivy entry
# BAB: Get the relative time (since the start of the trace)
time_accum = (est_matrix_raw$up_time[1:num_entry] - est_matrix_raw$up_time[1])
# BAB: Get the corresponding time from monitor_patch using time_accum
# BAB: Using ms to access (1/5000) resolution, so multiply by 5
# BAB: Index starting at 2, so add 1
energy_measured <- data.frame(time=monitor_patch$time[time_accum[2:length(time_accum)]*5+1])
# BAB: sum across energy for lengths of time_accum intervals?
energy_measured$energy <- apply(array(1:(length(time_accum)-1)), 1,
function(x) sum(unlist(energy)[(1+time_accum[x]*5):(time_accum[x+1]*5)])/1000)
## load phone activity log
#print("input phone activity log Rdata (w/o .Rdata)")
#i_rda <- scan(what=character(0), nmax=1)
#load(paste(i_rda, ".Rdata", sep=""))
est_matrix <- data.frame(time=energy_measured$time)
est_matrix$mws <- energy_measured$energy
est_matrix$cpu <- est_matrix_raw$cpu_factor[1:length(energy_measured$time)]
est_matrix$display <- est_matrix_raw$screen_factor[1:length(energy_measured$time)]
est_matrix$wifi <- est_matrix_raw$wifi_bytes[1:length(energy_measured$time)]
est_matrix$wifi_base <- est_matrix_raw$wifi_base[1:length(energy_measured$time)]
est_matrix$time_base <- est_matrix_raw$up_time_diff[1:length(energy_measured$time)]
save(energy_measured, est_matrix_raw, est_matrix,
file=paste("matrix/", o_rda, "_mapped.Rdata", sep=""))
plot(monitor_patch$time, monitor_patch$power_mw, type="l")
plot(energy_measured$time, energy_measured$energy)
plot(energy_measured$time, energy_measured$energy, type="l")
energy_measured$avg_power <- energy_measured$energy
plot(energy_measured$time, energy_measured$avg_power, type="l")
plot(energy_measured$time, energy_measured$energy, type="l")
rm(list=ls())
#source("lib_plot.R")
home_dir <- "/home/beitman/Projects/MobEBug/OrigMobEBug/project_code/power_model/power_model_data/"
print("input data folder")
wd <- scan(what=character(0), nmax=1)
setwd(paste(home_dir, wd, sep=""))
print("default mapping Rdata folder is set to 'matrix'")
print("input the mapping Rdata (xxx_mapped.Rdata w/o .Rdata)")
fin <- scan(what=character(0), nmax=1)
loc <- "matrix/"
load(paste(loc, fin, ".Rdata", sep=""))
est_matrix_wifi <- data.frame(time=est_matrix$time, time_base=est_matrix$time_base,
wifi_base=est_matrix$wifi_base, display=est_matrix$display)
interval <- 20 # 10 seconds
wifi_rate_sample <- length(est_matrix$wifi)%/%interval
if(wifi_rate_sample >= 1) {
wifi_rate <- apply(array(1:wifi_rate_sample), 1,
function(x)
sum(est_matrix$wifi[(1+interval*(x-1)):(interval*x)])/
sum(est_matrix$time_base[(1+interval*(x-1)):(interval*x)]))
cpu_rate <- apply(array(1:wifi_rate_sample), 1,
function(x)
sum(est_matrix$cpu[(1+interval*(x-1)):(interval*x)])/
sum(est_matrix$time_base[(1+interval*(x-1)):(interval*x)]))
mws_rate <- apply(array(1:wifi_rate_sample), 1,
function(x)
sum(est_matrix$mws[(1+interval*(x-1)):(interval*x)])/
sum(est_matrix$time_base[(1+interval*(x-1)):(interval*x)]))
display_rate <- apply(array(1:wifi_rate_sample), 1,
function(x)
sum(est_matrix$display[(1+interval*(x-1)):(interval*x)])/
sum(est_matrix$time_base[(1+interval*(x-1)):(interval*x)]))
est_matrix_wifi$wifi <- 0
est_matrix_wifi$cpu <- 0
est_matrix_wifi$mws <- 0
est_matrix_wifi$display <- 0
for(x in 1:wifi_rate_sample) {
est_matrix_wifi$wifi[(1+interval*(x-1)):(interval*x)] <- wifi_rate[x]
est_matrix_wifi$cpu[(1+interval*(x-1)):(interval*x)] <- cpu_rate[x]
est_matrix_wifi$mws[(1+interval*(x-1)):(interval*x)] <- mws_rate[x]
est_matrix_wifi$display[(1+interval*(x-1)):(interval*x)] <- display_rate[x]
}
if(length(est_matrix$wifi)%%interval<16) {
# discard the last few data because of the short length
est_matrix_wifi <- est_matrix_wifi[1:(wifi_rate_sample*interval),]
} else {
est_matrix_wifi$wifi[(1+wifi_rate_sample*interval):length(est_matrix$wifi)] <-
sum(est_matrix$wifi[(1+wifi_rate_sample*interval):length(est_matrix$wifi)])/
sum(est_matrix$time_base[(1+wifi_rate_sample*interval):length(est_matrix$wifi)])
est_matrix_wifi$cpu[(1+wifi_rate_sample*interval):length(est_matrix$cpu)] <-
sum(est_matrix$cpu[(1+wifi_rate_sample*interval):length(est_matrix$cpu)])/
sum(est_matrix$time_base[(1+wifi_rate_sample*interval):length(est_matrix$cpu)])
est_matrix_wifi$mws[(1+wifi_rate_sample*interval):length(est_matrix$mws)] <-
sum(est_matrix$mws[(1+wifi_rate_sample*interval):length(est_matrix$mws)])/
sum(est_matrix$time_base[(1+wifi_rate_sample*interval):length(est_matrix$mws)])
est_matrix_wifi$display[(1+wifi_rate_sample*interval):length(est_matrix$display)] <-
sum(est_matrix$display[(1+wifi_rate_sample*interval):length(est_matrix$display)])/
sum(est_matrix$time_base[(1+wifi_rate_sample*interval):length(est_matrix$display)])
}
if(wifi_rate_sample >= 1) {
wifi_rate <- apply(array(1:wifi_rate_sample), 1,
function(x)
sum(est_matrix$wifi[(1+interval*(x-1)):(interval*x)])/
sum(est_matrix$time_base[(1+interval*(x-1)):(interval*x)]))
cpu_rate <- apply(array(1:wifi_rate_sample), 1,
function(x)
sum(est_matrix$cpu[(1+interval*(x-1)):(interval*x)])/
sum(est_matrix$time_base[(1+interval*(x-1)):(interval*x)]))
mws_rate <- apply(array(1:wifi_rate_sample), 1,
function(x)
sum(est_matrix$mws[(1+interval*(x-1)):(interval*x)])/
sum(est_matrix$time_base[(1+interval*(x-1)):(interval*x)]))
display_rate <- apply(array(1:wifi_rate_sample), 1,
function(x)
sum(est_matrix$display[(1+interval*(x-1)):(interval*x)])/
sum(est_matrix$time_base[(1+interval*(x-1)):(interval*x)]))
est_matrix_wifi$wifi <- 0
est_matrix_wifi$cpu <- 0
est_matrix_wifi$mws <- 0
est_matrix_wifi$display <- 0
for(x in 1:wifi_rate_sample) {
est_matrix_wifi$wifi[(1+interval*(x-1)):(interval*x)] <- wifi_rate[x]
est_matrix_wifi$cpu[(1+interval*(x-1)):(interval*x)] <- cpu_rate[x]
est_matrix_wifi$mws[(1+interval*(x-1)):(interval*x)] <- mws_rate[x]
est_matrix_wifi$display[(1+interval*(x-1)):(interval*x)] <- display_rate[x]
}
if(length(est_matrix$wifi)%%interval<16) {
# discard the last few data because of the short length
est_matrix_wifi <- est_matrix_wifi[1:(wifi_rate_sample*interval),]
} else {
est_matrix_wifi$wifi[(1+wifi_rate_sample*interval):length(est_matrix$wifi)] <-
sum(est_matrix$wifi[(1+wifi_rate_sample*interval):length(est_matrix$wifi)])/
sum(est_matrix$time_base[(1+wifi_rate_sample*interval):length(est_matrix$wifi)])
est_matrix_wifi$cpu[(1+wifi_rate_sample*interval):length(est_matrix$cpu)] <-
sum(est_matrix$cpu[(1+wifi_rate_sample*interval):length(est_matrix$cpu)])/
sum(est_matrix$time_base[(1+wifi_rate_sample*interval):length(est_matrix$cpu)])
est_matrix_wifi$mws[(1+wifi_rate_sample*interval):length(est_matrix$mws)] <-
sum(est_matrix$mws[(1+wifi_rate_sample*interval):length(est_matrix$mws)])/
sum(est_matrix$time_base[(1+wifi_rate_sample*interval):length(est_matrix$mws)])
est_matrix_wifi$display[(1+wifi_rate_sample*interval):length(est_matrix$display)] <-
sum(est_matrix$display[(1+wifi_rate_sample*interval):length(est_matrix$display)])/
sum(est_matrix$time_base[(1+wifi_rate_sample*interval):length(est_matrix$display)])
}
est_matrix_wifi$wifi <- est_matrix_wifi$wifi*est_matrix_wifi$time_base
est_matrix_wifi$cpu <- est_matrix_wifi$cpu*est_matrix_wifi$time_base
est_matrix_wifi$mws <- est_matrix_wifi$mws*est_matrix_wifi$time_base
est_matrix_wifi$display <- est_matrix_wifi$display*est_matrix_wifi$time_base
} else {
est_matrix_wifi$wifi <- (sum(est_matrix$wifi)/sum(est_matrix$time_base))*est_matrix$time_base
est_matrix_wifi$cpu <- (sum(est_matrix$cpu)/sum(est_matrix$time_base))*est_matrix$time_base
est_matrix_wifi$mws <- (sum(est_matrix$mws)/sum(est_matrix$time_base))*est_matrix$time_base
est_matrix_wifi$display <- (sum(est_matrix$display)/sum(est_matrix$time_base))*est_matrix$time_base
}
save(energy_measured, est_matrix_raw, est_matrix, est_matrix_wifi,
file=paste(loc, fin, "_wifi.Rdata", sep=""))
setwd(home_dir)
source("../power-model/lib_plot.R")
plot_data(est_matrix_wifi)
}
rm(list=ls())
library("nnls", lib="/home/jychen/localx/r_packages")
source("lib_plot.R")
rm(list=ls())
library(nnls)
library("nnls", lib="/home//home/R/x86_64-pc-linux-gnu-library/2.14/")
source("lib_plot.R")
home_dir <- getwd()
setwd(home_dir)
rm(list=ls())
library(nnls)
library("nnls", lib="/home//home/R/x86_64-pc-linux-gnu-library/2.14/")
#setwd("/home/jychen/pmlog")
home_dir <- getwd()
setwd(home_dir)
source("../power-model/lib_plot.R")
matrix_0917 <- "matrix_0917/"
matrix_1015 <- "matrix_1015/"
matrix_1019 <- "matrix_1019/"
# BAB added test
TEST <- "TEST/"
coef_dir <- "coef"
# coeficient
print("default coef data folder is set to 'coef'")
print("input coef data (coefxxx.Rdata) w/o .Rdata")
fin <- scan(what=character(0), nmax=1)
load(paste("coef/", fin, ".Rdata", sep=""))
print("check 'coef' before calling 'test(coef)'")
#----------------------------------------------------------------
# test data
load_test <- function(coef, t) {
t$mws_est <- t$cpu*coef$cpu + t$display*coef$display +
t$wifi*coef$wifi + t$wifi_base*coef$wifi_base +
t$time_base*coef$time_base
# relative accuracy
t$accu <- abs(1 - (abs(t$mws-t$mws_est)/t$mws))
return(t)
}
#----------------------------------------------------------------------
# adjust coefficient
adjust_coef <- function(precoef, coef) {
coef$cpu = coef$cpu*pre_coef$cpu
#coef$display = coef$display*pre_coef$display
coef$display = pre_coef$display
coef$time_base = pre_coef$time_base
return(coef)
}
test <- function(coef) {
accu <- c()
load(paste(matrix_1015, "0161-apptest-wifi-off-0161_9705_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1015, "7377-apptest-wifi-off-7377_9705_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1015, "9217-apptest-wifi-off-9217_9705_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_0917, "7758-dropbox-7758_2577_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_0917, "1235-browser-1235_2577_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "dropbox-upload-6200_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "dropbox-upload2-6220_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "game-jewels-8066_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "game-jewels2-9514_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "hotmail-8131_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "pandora2-6305_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "pandora-4166_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
# BAB added K9-Mail comparison test
load(paste(TEST, "K9Mail-TEST_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
plot_box(accu, T)
}
test
test(coef)
matrix_0917 <- "power_model_data/matrix_0917/"
matrix_1015 <- "power_model_data/matrix_1015/"
matrix_1019 <- "power_model_data/matrix_1019/"
# BAB added test
TEST <- "power_model_data/TEST/"
test(coef)
test(coef)
matrix_0917 <- "0917/"
matrix_1015 <- "1015/"
matrix_1019 <- "1019/"
# BAB added test
TEST <- "TEST/"
test(coef)
matrix_0917 <- "0917/matrix/"
matrix_1015 <- "1015/matrix/"
matrix_1019 <- "1019/matrix/"
# BAB added test
TEST <- "TEST/matrix/"
test(coef)
load(paste(TEST, "K9Mail-TEST_mapped_wifi.Rdata", sep=""))
load(paste(matrix_1019, "pandora-4166_9874_mapped_extract_wifi.Rdata", sep=""))
plot_box(accu, T)
# BAB added K9-Mail comparison test
load(paste(TEST, "K9Mail-TEST_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
accu <- c()
load(paste(matrix_1015, "0161-apptest-wifi-off-0161_9705_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1015, "7377-apptest-wifi-off-7377_9705_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1015, "9217-apptest-wifi-off-9217_9705_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_0917, "7758-dropbox-7758_2577_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_0917, "1235-browser-1235_2577_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "dropbox-upload-6200_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "dropbox-upload2-6220_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "game-jewels-8066_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "game-jewels2-9514_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "hotmail-8131_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "pandora2-6305_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
load(paste(matrix_1019, "pandora-4166_9874_mapped_extract_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
# BAB added K9-Mail comparison test
load(paste(TEST, "K9Mail-TEST_mapped_wifi.Rdata", sep=""))
t <- load_test(coef, est_matrix_wifi)
accu <- c(accu, list(t$accu))
plot_box(accu, T)
View(est_matrix_wifi)
setwd(../../)
setwd("../../")
setwd("energy_analysis/jychen-activity-mapper-17f2c895d909/")
useArgs <- FALSE
wd <- scan(what=character(0), nmax=1)
log
print("Input targeted package")
package_name <- scan(what=character(0), nmax=1)
print("Input targeted log (*_util.log w/o _util.log)")
targeted_log <- scan(what=character(0), nmax=1)
## set up working directory
wd <- paste(home_dir, "/", wd, sep="")
setwd(wd)
wd <- scan(what=character(0), nmax=1)
wd <- paste(home_dir, "/", wd, sep="")
setwd(wd)
setwd(log/)
setwd("log/"")
""
setwd("log/")
in_util <- paste(targeted_log, "_util.log.util", sep="")
app_util_raw <- read.table(in_util, header=TRUE, stringsAsFactors=FALSE)
up_time_diff <- diff(app_util_raw$up_time, lag=1)
up_time_diff[length(up_time_diff)+1] <- 0
work_time_diff <- diff(app_util_raw$cpu_app, lag=1)
total_time_diff <- diff(app_util_raw$cpu_total, lag=1)
cpu_frac <- work_time_diff/total_time_diff
cpu_frac[length(cpu_frac)+1] <- 0
## cpu_factor = cpu_freq * utilization * time in ms
cpu_factor <- app_util_raw$cpu_freq * cpu_frac * up_time_diff
## display_factor = display_on (1/0) * brightness * time in ms
display_factor <- app_util_raw$display_use * app_util_raw$display_on *
app_util_raw$brightness * up_time_diff
## wifi # of data received in KB
wifi_rx_diff <- diff(app_util_raw$wifi_rx, lag=1)/1000
wifi_rx_diff[length(wifi_rx_diff)+1] <- 0
## wifi # of data sent in KB
wifi_tx_diff <- diff(app_util_raw$wifi_tx, lag=1)/1000
wifi_tx_diff[length(wifi_tx_diff)+1] <- 0
## total data transmision on wifi
wifi_total_diff <- wifi_rx_diff + wifi_tx_diff
## wifi_base = wifi_on (1/0) * time in ms
wifi_base <- app_util_raw$wifi_on * up_time_diff
## app utilization raw matrix
app_util_raw <- cbind(app_util_raw, up_time_diff, cpu_frac, cpu_factor,
display_factor, wifi_base, wifi_total_diff,
wifi_rx_diff, wifi_tx_diff)
#app_util_raw <- data.frame(app_util_raw)
app_util_raw <- app_util_raw[1:(length(app_util_raw$up_time)-1),]
## To further estimate the energy consumption of an app, we need to
## calculate the average of each component utilization per 10 seconds,
## and then use the pre-built per-phone power model for the estimation.
##
## In our power model, we keep wifi and phone base consumption shared
## with all processes/apps, and therefore, simply the sum of estimated
## energy consumed by all apps will be larger than the whole phone
## energy consumption estimated. Guess we can estimate the energy
## specifically used by an app by excluding wifi and phone base energy
## consumption.
app_util_est <- data.frame(up_time=app_util_raw$up_time,
time_base=app_util_raw$up_time_diff,
display_use=app_util_raw$display_use)
## todo: need to check if it's 500ms between records
interval <- 20 # 10 seconds
num_section <- length(app_util_raw$up_time)%/%interval
if(num_section >= 1) {
cpu_rate <- apply(array(1:num_section), 1,
function(x)
sum(app_util_raw$cpu_factor[(1+interval*(x-1)):(interval*x)])/
sum(app_util_raw$up_time_diff[(1+interval*(x-1)):(interval*x)]))
display_rate <- apply(array(1:num_section), 1,
function(x)
sum(app_util_raw$display_factor[(1+interval*(x-1)):(interval*x)])/
sum(app_util_raw$up_time_diff[(1+interval*(x-1)):(interval*x)]))
wifi_rate <- apply(array(1:num_section), 1,
function(x)
sum(app_util_raw$wifi_total_diff[(1+interval*(x-1)):(interval*x)])/
sum(app_util_raw$up_time_diff[(1+interval*(x-1)):(interval*x)]))
wifi_base_rate <- apply(array(1:num_section), 1,
function(x)
sum(app_util_raw$wifi_base[(1+interval*(x-1)):(interval*x)])/
sum(app_util_raw$up_time_diff[(1+interval*(x-1)):(interval*x)]))
#mws_rate <- apply(array(1:num_section), 1,
#  function(x)
#    sum(app_util_raw$mws[(1+interval*(x-1)):(interval*x)])/
#    sum(app_util_raw$up_time_diff[(1+interval*(x-1)):(interval*x)]))
app_util_est$cpu <- 0
app_util_est$display <- 0
app_util_est$wifi <- 0
app_util_est$wifi_base <- 0
#app_util_est$mws <- 0
for(x in 1:num_section) {
app_util_est$cpu[(1+interval*(x-1)):(interval*x)] <- cpu_rate[x]
app_util_est$display[(1+interval*(x-1)):(interval*x)] <- display_rate[x]
app_util_est$wifi[(1+interval*(x-1)):(interval*x)] <- wifi_rate[x]
app_util_est$wifi_base[(1+interval*(x-1)):(interval*x)] <- wifi_base_rate[x]
#app_util_est$mws[(1+interval*(x-1)):(interval*x)] <- mws_rate[x]
}
if(length(app_util_raw$up_time)%%interval < 16) {
## discard the last few data because of the length being too short
app_util_est <- app_util_est[1:(num_section*interval),]
} else {
section_begin <- (1 + num_section * interval)
section_end <- length(app_util_raw$up_time)
app_util_est$cpu[section_begin:section_end] <-
sum(app_util_raw$cpu_factor[section_begin:section_end])/
sum(app_util_raw$up_time_diff[section_begin:section_end])
app_util_est$display[section_begin:section_end] <-
sum(app_util_raw$display_factor[section_begin:section_end])/
sum(app_util_raw$up_time_diff[section_begin:section_end])
app_util_est$wifi[section_begin:section_end] <-
sum(app_util_raw$wifi_total_diff[section_begin:section_end])/
sum(app_util_raw$up_time_diff[section_begin:section_end])
app_util_est$wifi_base[section_begin:section_end] <-
sum(app_util_raw$wifi_base[section_begin:section_end])/
sum(app_util_raw$up_time_diff[section_begin:section_end])
#app_util_est$mws[section_begin:section_end] <-
#                  sum(app_util_raw$mws[section_begin:section_end])/
#                  sum(app_util_raw$up_time_diff[section_begin:section_end])
}
## apply the average utilization to each time period
app_util_est$cpu <- app_util_est$cpu*app_util_est$time_base
app_util_est$display <- app_util_est$display*app_util_est$time_base
app_util_est$wifi <- app_util_est$wifi*app_util_est$time_base
app_util_est$wifi_base <- app_util_est$wifi_base*app_util_est$time_base
#app_util_est$mws <- app_util_est$mws*app_util_est$time_base
} else {
## log length is less than one section (10 sec)
app_util_est$cpu <-
(sum(app_util_raw$cpu_factor)/sum(app_util_raw$up_time_diff))*app_util_raw$up_time_diff
app_util_est$display <-
(sum(app_util_raw$display_factor)/sum(app_util_raw$up_time_diff))*app_util_raw$up_time_diff
app_util_est$wifi <-
(sum(app_util_raw$wifi_total_diff)/sum(app_util_raw$up_time_diff))*app_util_raw$up_time_diff
app_util_est$wifi_base <-
(sum(app_util_raw$wifi_base)/sum(app_util_raw$up_time_diff))*app_util_raw$up_time_diff
#app_util_est$mws <-
#    (sum(app_util_raw$mws)/sum(app_util_raw$up_time_diff))*app_util_raw$up_time_diff
}
View(app_util_est)
