t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
display <- sum(app_util_est$display[t_lower:(t_upper-1)]) -
app_util_est$display[t_lower]*head_to_remove +
app_util_est$display[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
display <- app_util_est$display[t_lower]*action_length
}
return(display)
}
}
func_action_display_use <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
return(app_util_est$display_use[max(t_lower)])
}
}
func_action_wifi <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
wifi <- sum(app_util_est$wifi[t_lower:(t_upper-1)]) -
app_util_est$wifi[t_lower]*head_to_remove +
app_util_est$wifi[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
wifi <- app_util_est$wifi[t_lower]*action_length
}
return(wifi)
}
}
func_action_wifi_base <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
wifi_base <- sum(app_util_est$wifi_base[t_lower:(t_upper-1)]) -
app_util_est$wifi_base[t_lower]*head_to_remove +
app_util_est$wifi_base[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
wifi_base <- app_util_est$wifi_base[t_lower]*action_length
}
return(wifi_base)
}
}
app_log$cpu <- apply(array(1:length(app_log$up_time)), 1, function(x) func_action_cpu(x))
app_log$cpuidle <- apply(array(1:length(app_log$up_time)), 1, function(x) func_action_cpuidle(x))
func_action_cpuidle <- function(t) {
t_lower <- which(app_util_est$up_time <= idle_app_log$up_time[t])
t_upper <- which(app_util_est$up_time > idle_app_log$up_time[t])
#t_lower <- idle_app_log
print("t: ", t, sep=""))
#print(paste("t_lower: ", t_lower, sep=""))
#print(paste("t_upper: ", t_upper, sep=""))
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
print(paste("[t]: ", t, sep=""))
print(paste("idle_app_log$up_time[t]: ", idle_app_log$up_time[t], sep=""))
print(paste("idle_app_log$up_time_diff[t]: ", idle_app_log$idle_up_time_diff[t], sep=""))
action_end <- idle_app_log$up_time[t] + idle_app_log$idle_up_time_diff[t]
print(paste("app_util_est$up_time: ", app_util_est$up_time, sep=""))
print(paste("action_end: ", action_end, sep=""))
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (idle_app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
idle_cpu <- sum(app_util_est$cpuidle[t_lower:(t_upper-1)]) -
app_util_est$cpuidle[t_lower]*head_to_remove +
app_util_est$cpuidle[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- idle_app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
idle_cpu <- app_util_est$cpuidle[t_lower]*action_length
}
#print(paste("idle_cpu: ", idle_cpu, sep=""))
return(idle_cpu)
}
}
func_action_display <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
display <- sum(app_util_est$display[t_lower:(t_upper-1)]) -
app_util_est$display[t_lower]*head_to_remove +
app_util_est$display[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
display <- app_util_est$display[t_lower]*action_length
}
return(display)
}
}
func_action_display_use <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
return(app_util_est$display_use[max(t_lower)])
}
}
func_action_wifi <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
wifi <- sum(app_util_est$wifi[t_lower:(t_upper-1)]) -
app_util_est$wifi[t_lower]*head_to_remove +
app_util_est$wifi[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
wifi <- app_util_est$wifi[t_lower]*action_length
}
return(wifi)
}
}
func_action_wifi_base <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
wifi_base <- sum(app_util_est$wifi_base[t_lower:(t_upper-1)]) -
app_util_est$wifi_base[t_lower]*head_to_remove +
app_util_est$wifi_base[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
wifi_base <- app_util_est$wifi_base[t_lower]*action_length
}
return(wifi_base)
}
}
app_log$cpu <- apply(array(1:length(app_log$up_time)), 1, function(x) func_action_cpu(x))
app_log$cpuidle <- apply(array(1:length(app_log$up_time)), 1, function(x) func_action_cpuidle(x))
app_log$cpuidle <- apply(array(1:length(app_log$up_time)), 1, function(x) func_action_cpuidle(x))
func_action_cpuidle <- function(t) {
t_lower <- which(app_util_est$up_time <= idle_app_log$up_time[t])
t_upper <- which(app_util_est$up_time > idle_app_log$up_time[t])
#t_lower <- idle_app_log
print("t: ", t, sep=""))
#print(paste("t_lower: ", t_lower, sep=""))
#print(paste("t_upper: ", t_upper, sep=""))
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
print(paste("[t]: ", t, sep=""))
print(paste("idle_app_log$up_time[t]: ", idle_app_log$up_time[t], sep=""))
print(paste("idle_app_log$up_time_diff[t]: ", idle_app_log$idle_up_time_diff[t], sep=""))
action_end <- idle_app_log$up_time[t] + idle_app_log$idle_up_time_diff[t]
print(paste("app_util_est$up_time: ", app_util_est$up_time, sep=""))
print(paste("action_end: ", action_end, sep=""))
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (idle_app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
idle_cpu <- sum(app_util_est$cpuidle[t_lower:(t_upper-1)]) -
app_util_est$cpuidle[t_lower]*head_to_remove +
app_util_est$cpuidle[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- idle_app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
idle_cpu <- app_util_est$cpuidle[t_lower]*action_length
}
#print(paste("idle_cpu: ", idle_cpu, sep=""))
return(idle_cpu)
}
}
func_action_cpuidle <- function(t) {
t_lower <- which(app_util_est$up_time <= idle_app_log$up_time[t])
t_upper <- which(app_util_est$up_time > idle_app_log$up_time[t])
#t_lower <- idle_app_log
print(paste("t: ", t, sep=""))
#print(paste("t_lower: ", t_lower, sep=""))
#print(paste("t_upper: ", t_upper, sep=""))
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
print(paste("[t]: ", t, sep=""))
print(paste("idle_app_log$up_time[t]: ", idle_app_log$up_time[t], sep=""))
print(paste("idle_app_log$up_time_diff[t]: ", idle_app_log$idle_up_time_diff[t], sep=""))
action_end <- idle_app_log$up_time[t] + idle_app_log$idle_up_time_diff[t]
print(paste("app_util_est$up_time: ", app_util_est$up_time, sep=""))
print(paste("action_end: ", action_end, sep=""))
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (idle_app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
idle_cpu <- sum(app_util_est$cpuidle[t_lower:(t_upper-1)]) -
app_util_est$cpuidle[t_lower]*head_to_remove +
app_util_est$cpuidle[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- idle_app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
idle_cpu <- app_util_est$cpuidle[t_lower]*action_length
}
#print(paste("idle_cpu: ", idle_cpu, sep=""))
return(idle_cpu)
}
}
app_log$cpuidle <- apply(array(1:length(app_log$up_time)), 1, function(x) func_action_cpuidle(x))
t <- 650
which(app_util_est$up_time <= idle_app_log$up_time[t])
idle_app_log$up_time[t]
which(app_util_est$up_time <= app_log$up_time[t])
which(app_util_est$up_time > app_log$up_time[t])
func_action_cpuidle <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
#t_lower <- idle_app_log
print(paste("t: ", t, sep=""))
#print(paste("t_lower: ", t_lower, sep=""))
#print(paste("t_upper: ", t_upper, sep=""))
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
print(paste("[t]: ", t, sep=""))
print(paste("idle_app_log$up_time[t]: ", app_log$up_time[t], sep=""))
print(paste("idle_app_log$up_time_diff[t]: ", app_log$idle_up_time_diff[t], sep=""))
action_end <- app_log$up_time[t] + app_log$idle_up_time_diff[t]
print(paste("app_util_est$up_time: ", app_util_est$up_time, sep=""))
print(paste("action_end: ", action_end, sep=""))
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
idle_cpu <- sum(app_util_est$cpuidle[t_lower:(t_upper-1)]) -
app_util_est$cpuidle[t_lower]*head_to_remove +
app_util_est$cpuidle[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
idle_cpu <- app_util_est$cpuidle[t_lower]*action_length
}
#print(paste("idle_cpu: ", idle_cpu, sep=""))
return(idle_cpu)
}
}
func_action_display <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
display <- sum(app_util_est$display[t_lower:(t_upper-1)]) -
app_util_est$display[t_lower]*head_to_remove +
app_util_est$display[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
display <- app_util_est$display[t_lower]*action_length
}
return(display)
}
}
func_action_display_use <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
return(app_util_est$display_use[max(t_lower)])
}
}
func_action_wifi <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
wifi <- sum(app_util_est$wifi[t_lower:(t_upper-1)]) -
app_util_est$wifi[t_lower]*head_to_remove +
app_util_est$wifi[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
wifi <- app_util_est$wifi[t_lower]*action_length
}
return(wifi)
}
}
func_action_wifi_base <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
wifi_base <- sum(app_util_est$wifi_base[t_lower:(t_upper-1)]) -
app_util_est$wifi_base[t_lower]*head_to_remove +
app_util_est$wifi_base[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
wifi_base <- app_util_est$wifi_base[t_lower]*action_length
}
return(wifi_base)
}
}
app_log$cpu <- apply(array(1:length(app_log$up_time)), 1, function(x) func_action_cpu(x))
app_log$cpuidle <- apply(array(1:length(app_log$up_time)), 1, function(x) func_action_cpuidle(x))
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
length(t_lower)==0 || length(t_upper)==0
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$idle_up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
max(which(app_util_est$up_time <= action_end))
app_log$up_time[t]
app_log$idle_up_time_diff[t]
app_log$up_time_diff[t]
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
func_action_cpuidle <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
#t_lower <- idle_app_log
print(paste("t: ", t, sep=""))
#print(paste("t_lower: ", t_lower, sep=""))
#print(paste("t_upper: ", t_upper, sep=""))
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
print(paste("[t]: ", t, sep=""))
print(paste("idle_app_log$up_time[t]: ", app_log$up_time[t], sep=""))
print(paste("idle_app_log$up_time_diff[t]: ", app_log$idle_up_time_diff[t], sep=""))
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
print(paste("app_util_est$up_time: ", app_util_est$up_time, sep=""))
print(paste("action_end: ", action_end, sep=""))
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
idle_cpu <- sum(app_util_est$cpuidle[t_lower:(t_upper-1)]) -
app_util_est$cpuidle[t_lower]*head_to_remove +
app_util_est$cpuidle[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
idle_cpu <- app_util_est$cpuidle[t_lower]*action_length
}
#print(paste("idle_cpu: ", idle_cpu, sep=""))
return(idle_cpu)
}
}
func_action_display <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
display <- sum(app_util_est$display[t_lower:(t_upper-1)]) -
app_util_est$display[t_lower]*head_to_remove +
app_util_est$display[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
display <- app_util_est$display[t_lower]*action_length
}
return(display)
}
}
func_action_display_use <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
return(app_util_est$display_use[max(t_lower)])
}
}
func_action_wifi <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
wifi <- sum(app_util_est$wifi[t_lower:(t_upper-1)]) -
app_util_est$wifi[t_lower]*head_to_remove +
app_util_est$wifi[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
wifi <- app_util_est$wifi[t_lower]*action_length
}
return(wifi)
}
}
func_action_wifi_base <- function(t) {
t_lower <- which(app_util_est$up_time <= app_log$up_time[t])
t_upper <- which(app_util_est$up_time > app_log$up_time[t])
if(length(t_lower)==0 || length(t_upper)==0) {
## timestamp out of utilization log range
return(NA)
} else {
t_lower <- max(t_lower)
action_end <- app_log$up_time[t] + app_log$up_time_diff[t]
t_upper <- max(which(app_util_est$up_time <= action_end))
if(t_lower < t_upper) {
head_to_remove <- (app_log$up_time[t]-app_util_est$up_time[t_lower])/app_util_est$time_base[t_lower]
tail_to_append <- (action_end-app_util_est$up_time[t_upper])/app_util_est$time_base[t_upper]
wifi_base <- sum(app_util_est$wifi_base[t_lower:(t_upper-1)]) -
app_util_est$wifi_base[t_lower]*head_to_remove +
app_util_est$wifi_base[t_upper]*tail_to_append
} else if(t_lower == t_upper) {
action_length <- app_log$up_time_diff[t]/app_util_est$time_base[t_lower]
wifi_base <- app_util_est$wifi_base[t_lower]*action_length
}
return(wifi_base)
}
}
app_log$cpu <- apply(array(1:length(app_log$up_time)), 1, function(x) func_action_cpu(x))
app_log$cpuidle <- apply(array(1:length(app_log$up_time)), 1, function(x) func_action_cpuidle(x))
View(app_log)
app_log$energy <- app_log$cpu*coef$cpu + app_log$cpuidle +
app_log$display*coef$display +
app_log$wifi*coef$wifi + app_log$wifi_base*coef$wifi_base +
app_log$up_time_diff*coef$phone_base
View(app_log)
